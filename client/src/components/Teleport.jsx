/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.2.16 public/models/items/Gate_valla_2.glb -o src/components/Door.jsx -r public -k 
*/

import React, { useState } from 'react'
import { useGLTF, useCursor } from '@react-three/drei'
import { socket } from './SocketManager'




export function Teleport(props) {
  const { name, gridPosition, size, rotation } = props.item;
  const { scene } = useGLTF(`/models/items/${name}.glb`);
  const [isDoor, setIsDoor] = useState(false)
  const [onObject, setOnObject] = useState(false);
  const { grid3DToVector3 } = useGrid();
  // Skinned meshes cannot be re-used in threejs without cloning them
  const clone = useMemo(() => SkeletonUtils.clone(scene), [scene]);
  const width = rotation === 1 || rotation === 3 ? size[1] : size[0];
  const height = rotation === 1 || rotation === 3 ? size[0] : size[1];
  useCursor(onObject);


  return (
    <primitive
      key={item.teleportId}
      object={clone}
      //onClick={() => { actionType(item) }}
      onClick={() => { console.log(item.type) }}
      position={grid3DToVector3(gridPosition, mapId, width, height)}
      rotation-y={((rotation || 0) * Math.PI) / 2}
    />
  )
}

useGLTF.preload(`/models/items/${name}.glb`)
